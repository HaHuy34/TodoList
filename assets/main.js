const nameWork = document.getElementById("work-title");
const addJob = document.querySelector(".add-job");
const listJob = document.querySelector(".list-job");
const todo_wrapper = document.querySelector(".todo_wrapp");

//Todo: Th√™m c√¥ng vi·ªác
function moreWork() {
  const jobTitle = nameWork.value;
  //S·∫Øp x·∫øp v·ªã tr√≠ c√¥ng vi·ªác theo √Ω m√¨nh
  const newJobItem = document.createElement("li");
  newJobItem.classList = "item";
  newJobItem.draggable = true;
  const items = listJob.querySelectorAll(".item");
  items.forEach((item) => {
    item.addEventListener("dragstart", () => {
      // Th√™m l·ªõp k√©o v√†o m·ª•c sau m·ªôt th·ªùi gian tr√¨ ho√£n
      setTimeout(() => item.classList.add("dragging"), 0);
    });
    // X√≥a l·ªõp k√©o kh·ªèi m·ª•c trong s·ª± ki·ªán dragend
    item.addEventListener("dragend", () => item.classList.remove("dragging"));
  });
  const initlistJob = (e) => {
    e.preventDefault();
    const draggingItem = document.querySelector(".dragging");
    // L·∫•y t·∫•t c·∫£ c√°c m·ª•c ngo·∫°i tr·ª´ hi·ªán ƒëang k√©o v√† t·∫°o m·∫£ng c·ªßa ch√∫ng
    let siblings = [...listJob.querySelectorAll(".item:not(.dragging)")];
    // T√¨m v·ªã tr√≠ m√† sau ƒë√≥ v·∫≠t ph·∫©m k√©o s·∫Ω ƒë∆∞·ª£c ƒë·∫∑t
    let nextSibling = siblings.find((sibling) => {
      return e.clientY <= sibling.offsetTop + sibling.offsetHeight / 2;
    });
    // Ch√®n m·ª•c k√©o tr∆∞·ªõc v·ªã tr√≠ ƒë∆∞·ª£c t√¨m th·∫•y
    listJob.insertBefore(draggingItem, nextSibling);
  };
  listJob.addEventListener("dragover", initlistJob);
  listJob.addEventListener("dragenter", (e) => e.preventDefault());

  //Todo: div ch·ª©a icons delete, checkDone, Edit
  const divMainIcons = document.createElement("div");
  divMainIcons.className = "main-icons-title";
  newJobItem.appendChild(divMainIcons);

  const deleteIcon = document.createElement("i");
  deleteIcon.className = "bx bx-trash";

  const doneWork = document.createElement("input");
  doneWork.type = "checkbox";

  const editWork = document.createElement("i");
  editWork.className = "bx bx-edit";

  // T·∫°o n·ªôi dung c√¥ng vi·ªác
  const jobText = document.createTextNode(jobTitle);

  // Th√™m ph·∫ßn t·ª≠ i v√†o li
  divMainIcons.appendChild(deleteIcon);
  newJobItem.appendChild(doneWork);
  divMainIcons.appendChild(editWork);

  // Th√™m n·ªôi dung c√¥ng vi·ªác v√†o li
  newJobItem.appendChild(jobText);

  // Th√™m ph·∫ßn t·ª≠ li v√†o danh s√°ch c√¥ng vi·ªác
  listJob.appendChild(newJobItem);

  // X√≥a n·ªôi dung trong tr∆∞·ªùng input
  nameWork.value = "";
  deleteIcon.addEventListener("click", function () {
    const confirrm = confirm("B·∫°n mu·ªën x√≥a c√¥ng vi·ªác n√†y ra kh·ªèi danh s√°ch");
    if (confirrm) {
      listJob.removeChild(newJobItem);
    }
  });

  doneWork.addEventListener("change", function () {
    //Check-box type
    if (doneWork.checked) {
      alert("Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh c√¥ng");
      newJobItem.classList.add("check-done");
      divMainIcons.removeChild(editWork);
      divMainIcons.removeChild(doneWork);
    } else {
      divMainIcons.insertBefore(editWork, deleteIcon);
      divMainIcons.insertBefore(deleteIcon, editWork);
      newJobItem.classList.add("color");
    }
  });

  editWork.addEventListener("click", function () {
    // T·∫°o m·ªôt y·∫øu t·ªë ƒë·∫ßu v√†o ƒë·ªÉ ch·ªânh s·ª≠a
    const editInput = document.createElement("input");
    editInput.type = "text";
    editInput.value = jobTitle;

    // Thay th·∫ø ch·ª©c danh c√¥ng vi·ªác b·∫±ng ƒë·∫ßu v√†o ch·ªânh s·ª≠a
    newJobItem.replaceChild(editInput, jobText);

    editInput.addEventListener("blur", function () {
      const newJobTitle = editInput.value;

      // Ki·ªÉm tra ch·ª©c danh c√¥ng vi·ªác tr√πng l·∫∑p
      const existingJobTitles = Array.from(
        listJob.getElementsByTagName("li")
      ).map((job) => job.textContent);
      const isDuplicate = existingJobTitles.some(
        (title) => title === newJobTitle
      );

      if (isDuplicate) {
        alert(
          "C√¥ng vi·ªác ƒë√£ t·ªìn t·∫°i trong danh s√°ch. Vui l√≤ng nh·∫≠p m·ªôt c√¥ng vi·ªác kh√°c"
        );
      } else {
        jobText.textContent = newJobTitle;
        newJobItem.replaceChild(jobText, editInput);
        alert("B·∫°n ƒë√£ ch·ªânh s·ª≠a c√¥ng vi·ªác th√†nh c√¥ng");
      }
    });
  });
}

addJob.addEventListener("click", function () {
  const jobTitle = nameWork.value;

  if (jobTitle !== "") {
    const existingJobs = listJob.getElementsByTagName("li");

    // L·∫∑p l·∫°i c√°c c√¥ng vi·ªác hi·ªán c√≥ ƒë·ªÉ ki·ªÉm tra xem ch·ª©c danh c√¥ng vi·ªác ƒë√£ t·ªìn t·∫°i ch∆∞a
    for (let i = 0; i < existingJobs.length; i++) {
      const existingJobTitle = existingJobs[i].textContent;
      if (existingJobTitle === jobTitle) {
        alert(
          "C√¥ng vi·ªác ƒë√£ t·ªìn t·∫°i trong danh s√°ch. H√£y th√™m m·ªôt c√¥ng vi·ªác m·ªõi üòä"
        );
        return;
      }
    }

    moreWork(); // Th√™m c√¥ng vi·ªác n·∫øu n√≥ ch∆∞a t·ªìn t·∫°i
  } else {
    alert("H√£y nh·∫≠p c√¥ng vi·ªác b·∫°n mu·ªën th√™m.");
  }
});

// new Sortable(listJob, {
//   animation: 300,
// });
